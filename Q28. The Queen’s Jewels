#include <iostream>
#include <vector>
using namespace std;

pair<int,int> firstOccurrence(vector<vector<int>>& matrix, int target) {
    int n = matrix.size();
    int m = matrix[0].size();
    int left = 0, right = n*m - 1;
    pair<int,int> ans = {-1,-1};

    while(left <= right) {
        int mid = left + (right - left)/2;
        int midVal = matrix[mid/m][mid%m];
        if(midVal == target) {
            ans = {mid/m, mid%m};  // record position
            right = mid - 1;       // move left to find first occurrence
        } else if(midVal < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return ans;
}

int main() {
    int n, m, target;
    cin >> n >> m;
    vector<vector<int>> matrix(n, vector<int>(m));
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            cin >> matrix[i][j];
    cin >> target;

    pair<int,int> pos = firstOccurrence(matrix, target);
    cout << "(" << pos.first << "," << pos.second << ")";
    return 0;
}
